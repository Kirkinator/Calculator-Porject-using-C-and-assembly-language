Microsoft (R) Macro Assembler Version 14.29.30133.0	    12/14/21 12:00:42
..\..\irvine\examples\ch13\C_Language_Project\C_Language_Project\asmMain.asm  Page 1 - 1


				.586
				.MODEL FLAT, C
				.STACK
 00000000			.DATA
 00000000			.CODE


				;adding 3 funtions
				PUBLIC add_asm
				PUBLIC sub_asm
				PUBLIC mult_asm


 00000000			add_asm PROC, number1:DWORD, number2:DWORD               ;this function will be used to start the addition function
 00000000  55		   *	    push   ebp
 00000001  8B EC	   *	    mov    ebp, esp
 00000003  8B 45 08			mov eax, number1                                     ; moves number1 into the eax register
 00000006  03 45 0C			add eax, number2                                     ; adds number2 to the eax register
					ret                                                  ; returns the number in the eax register to the c program
 00000009  C9		   *	    leave  
 0000000A  C3		   *	    ret    00000h
 0000000B			add_asm ENDP                                             ; ends the add_asm function

 0000000B			sub_asm PROC, number1:DWORD, number2:DWORD               ; this function will be used to subtract 2 numbers from eachother
 0000000B  55		   *	    push   ebp
 0000000C  8B EC	   *	    mov    ebp, esp
 0000000E  8B 45 08			mov eax, number1                                     ; moves number1 to the eax register
 00000011  2B 45 0C			sub eax, number2                                     ; subtracts number2 from the eax register
					ret                                                  ; returns the number in the eax register to the c program
 00000014  C9		   *	    leave  
 00000015  C3		   *	    ret    00000h
 00000016			sub_asm ENDP                                             ; ends the mult_asm function

 00000016			mult_asm PROC, number1:DWORD, number2:DWORD              ; this function will be called to multiply two numbers
 00000016  55		   *	    push   ebp
 00000017  8B EC	   *	    mov    ebp, esp
 00000019  8B 45 08			mov eax, number1                                     ; moves number1 into the eax register
 0000001C  F7 6D 0C			imul number2                                         ; multiplies number2 to the eax register
					ret                                                  ; returns the number in the eax register to our c program
 0000001F  C9		   *	    leave  
 00000020  C3		   *	    ret    00000h
 00000021			mult_asm ENDP                                            ; ends the mult_asm function


				END
Microsoft (R) Macro Assembler Version 14.29.30133.0	    12/14/21 12:00:42
..\..\irvine\examples\ch13\C_Language_Project\C_Language_Project\asmMain.asm  Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00000400 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000021 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

add_asm  . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000000B Public C
  number1  . . . . . . . . . . .	DWord	 bp + 00000008
  number2  . . . . . . . . . . .	DWord	 bp + 0000000C
mult_asm . . . . . . . . . . . .	P Near	 00000016 _TEXT	Length= 0000000B Public C
  number1  . . . . . . . . . . .	DWord	 bp + 00000008
  number2  . . . . . . . . . . .	DWord	 bp + 0000000C
sub_asm  . . . . . . . . . . . .	P Near	 0000000B _TEXT	Length= 0000000B Public C
  number1  . . . . . . . . . . .	DWord	 bp + 00000008
  number2  . . . . . . . . . . .	DWord	 bp + 0000000C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000001h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT

	   0 Warnings
	   0 Errors
